{"version":3,"sources":["pages/Home.js","pages/AdAccount.js","pages/App.js","index.js"],"names":["Home","useState","adAccounts","setAdAccounts","user","setUser","useEffect","window","checkLoginState","FB","getLoginStatus","res","console","log","status","state","isLogin","api","name","pictureURL","picture","data","url","adaccounts","fbAsyncInit","init","appId","cookie","xfbml","version","AppEvents","logPageView","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","className","onClick","logout","response","alt","style","width","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","data-width","data-onlogin","data-scope","display","length","map","key","type","navigate","AdAccount","adAccountId","loading","setLoading","useImmer","dateArray","leadSpendArray","leadArray","preLaunchSpendArray","roasSpendArray","roasArray","adAccount","setAdAccount","setPaging","chartConfigOptions","maintainAspectRatio","hover","intersect","tooltips","mode","purchaseLineChartData","labels","reverse","datasets","label","fill","borderColor","pointBackgroundColor","pointHoverBackgroundColor","leadLineChartData","cursorKey","cursorValue","fetch","then","json","formatDataMart","account_name","paging","fetchData","Object","keys","values","dateData","adCampaignArray","totalSpend","adCampaign","parseInt","spend","adCampaignSpend","push","totalLead","actions","adCampaignLeadAction","find","action","action_type","value","toFixed","totalRevenue","action_values","adCampaignOmniPurchaseAction","generateChartData","role","height","options","scope","date","index","rawData","dataMart","date_start","campaignType","campaign_name","includes","getCampaignType","App","basepath","primary","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e09d1a70.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { navigate } from '@reach/router'\r\n\r\nfunction Home() {\r\n  const [adAccounts, setAdAccounts] = useState([])\r\n  const [user, setUser] = useState({})\r\n\r\n  useEffect(() => {\r\n    window.checkLoginState = function () {\r\n      window.FB\r\n        ? window.FB.getLoginStatus((res) => {\r\n            console.log(res)\r\n\r\n            if (res.status === 'connected') {\r\n              // Logged into your webpage and Facebook.\r\n              setUser((state) => ({\r\n                ...state,\r\n                isLogin: true,\r\n              }))\r\n\r\n              console.log('fetchUserAndAdAccounts')\r\n              fetchUserAndAdAccounts()\r\n            } else {\r\n              // Not logged into your webpage or we are unable to tell.\r\n              console.log('Please log into this webpage.')\r\n            }\r\n          })\r\n        : console.log('FB not loaded.')\r\n    }\r\n    window.checkLoginState()\r\n\r\n    window.fbAsyncInit = function () {\r\n      window.FB.init({\r\n        appId: '2772453809519165',\r\n        cookie: true,\r\n        xfbml: true,\r\n        version: 'v6.0',\r\n      })\r\n\r\n      window.FB.AppEvents.logPageView()\r\n      window.checkLoginState()\r\n    }\r\n    ;(function (d, s, id) {\r\n      var js,\r\n        fjs = d.getElementsByTagName(s)[0]\r\n      if (d.getElementById(id)) {\r\n        return\r\n      }\r\n      js = d.createElement(s)\r\n      js.id = id\r\n      js.src =\r\n        'https://connect.facebook.net/zh_TW/sdk.js#xfbml=1&version=v7.0&appId=2772453809519165&autoLogAppEvents=1'\r\n      fjs.parentNode.insertBefore(js, fjs)\r\n    })(document, 'script', 'facebook-jssdk')\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container my-3'>\r\n      {/* Avatar、登出 */}\r\n      {user.pictureURL ? (\r\n        <div className='text-right my-3'>\r\n          <div\r\n            className='btn btn-primary'\r\n            onClick={() =>\r\n              window.FB.logout(function (response) {\r\n                setUser({})\r\n                setAdAccounts([])\r\n              })\r\n            }\r\n          >\r\n            <div className=' d-flex align-items-center'>\r\n              <img\r\n                src={user.pictureURL}\r\n                alt='avatar'\r\n                className='rounded-circle'\r\n                style={{ width: '30px' }}\r\n              />\r\n              <span className='mx-2'>登出</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <h1 className='text-center my-3'>廣告帳號</h1>\r\n      {/* 臉書登入 */}\r\n      <div className='w-100 text-center my-3'>\r\n        <div\r\n          className='fb-login-button'\r\n          data-size='large'\r\n          data-button-type='continue_with'\r\n          data-layout='default'\r\n          data-auto-logout-link='false'\r\n          data-use-continue-as='true'\r\n          data-width=''\r\n          data-onlogin='checkLoginState();'\r\n          data-scope='public_profile,email,ads_read,business_management'\r\n          style={{ display: user.isLogin ? 'none' : 'block' }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* 廣告帳戶列表 */}\r\n      <main className='col-12 col-md-6 m-auto'>\r\n        {adAccounts.length > 0 ? (\r\n          <div className='list-group'>\r\n            {adAccounts.map(({ name, id }) => (\r\n              <button\r\n                key={id}\r\n                type='button'\r\n                className='list-group-item list-group-item-action'\r\n                onClick={() =>\r\n                  navigate(`/facebook-ad-account-dashboard/ad-account/${id}`)\r\n                }\r\n              >\r\n                {name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </main>\r\n    </div>\r\n  )\r\n\r\n  function fetchUserAndAdAccounts() {\r\n    window.FB.api(\r\n      '/me?fields=name,picture{url},adaccounts{name,account_id,age}',\r\n      function (res) {\r\n        setUser((state) => ({\r\n          ...state,\r\n          name: res.name,\r\n          pictureURL: res.picture.data.url,\r\n        }))\r\n        setAdAccounts(res.adaccounts.data)\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useImmer } from 'use-immer'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { navigate } from '@reach/router'\r\n\r\nfunction AdAccount({ adAccountId }) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [adAccount, setAdAccount] = useImmer({\r\n    data: [],\r\n    dateArray: [],\r\n    leadSpendArray: [],\r\n    leadArray: [],\r\n    preLaunchSpendArray: [],\r\n    roasSpendArray: [],\r\n    roasArray: [],\r\n  })\r\n  const [paging, setPaging] = useState({})\r\n  const chartConfigOptions = {\r\n    maintainAspectRatio: false,\r\n    hover: {\r\n      intersect: false,\r\n    },\r\n    tooltips: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n  }\r\n\r\n  function generateChartData() {\r\n    let dateArray = Object.keys(adAccount.data)\r\n    let leadSpendArray = []\r\n    let leadArray = []\r\n    let preLaunchSpendArray = []\r\n    let roasSpendArray = []\r\n    let roasArray = []\r\n\r\n    Object.values(adAccount.data).map((dateData) => {\r\n      if( dateData['預熱']) {\r\n        const adCampaignArray = dateData['預熱']\r\n        let totalSpend = 0\r\n\r\n        adCampaignArray.map((adCampaign) => {\r\n          if (parseInt(adCampaign.spend) === 0 ) {\r\n            return\r\n          }\r\n    \r\n          const adCampaignSpend = parseInt(adCampaign.spend)\r\n\r\n          totalSpend += adCampaignSpend\r\n        })\r\n        if(totalSpend !== 0 ) {\r\n          preLaunchSpendArray.push(totalSpend)\r\n        } else {\r\n          preLaunchSpendArray.push(null)\r\n        }\r\n      } else {\r\n        preLaunchSpendArray.push(null)\r\n      }\r\n\r\n      if (dateData['前測']) {\r\n        const adCampaignArray = dateData['前測']\r\n        let totalSpend = 0\r\n        let totalLead = 0\r\n\r\n        adCampaignArray.map((adCampaign) => {\r\n          if (parseInt(adCampaign.spend) === 0 || !adCampaign.actions) {\r\n            return\r\n          }\r\n    \r\n          const adCampaignSpend = parseInt(adCampaign.spend)\r\n          const adCampaignLeadAction = adCampaign.actions.find(\r\n            (action) =>\r\n              action.action_type === 'offsite_conversion.fb_pixel_custom'\r\n          )\r\n\r\n          totalSpend += adCampaignSpend\r\n          totalLead += adCampaignLeadAction ? parseInt(adCampaignLeadAction.value) : 0\r\n        })\r\n        if(totalSpend !== 0 && totalLead !== 0) {\r\n          leadSpendArray.push(totalSpend)\r\n          leadArray.push((totalSpend/totalLead).toFixed(2))\r\n        } else {\r\n          leadSpendArray.push(null)\r\n          leadArray.push(null)\r\n        }\r\n      } else {\r\n        leadSpendArray.push(null)\r\n        leadArray.push(null)\r\n      }\r\n\r\n      if (dateData['嘖嘖']) {\r\n        const adCampaignArray = dateData['嘖嘖']\r\n        let totalSpend = 0\r\n        let totalRevenue = 0\r\n\r\n        adCampaignArray.map((adCampaign) => {\r\n          if (parseInt(adCampaign.spend) === 0 || !adCampaign.action_values) {\r\n            return\r\n          }\r\n\r\n          const adCampaignSpend = parseInt(adCampaign.spend)\r\n          const adCampaignOmniPurchaseAction = adCampaign.action_values.find(\r\n            (action) => action.action_type === 'omni_purchase'\r\n          )\r\n          totalSpend += adCampaignSpend\r\n          totalRevenue += adCampaignOmniPurchaseAction\r\n            ? parseInt(adCampaignOmniPurchaseAction.value)\r\n            : 0\r\n        })\r\n\r\n        if (totalSpend !== 0 && totalRevenue !== 0) {\r\n          roasSpendArray.push(totalSpend)\r\n          roasArray.push((totalRevenue / totalSpend).toFixed(2))\r\n        } else {\r\n          roasSpendArray.push(null)\r\n          roasArray.push(null)\r\n        }\r\n      } else {\r\n        roasSpendArray.push(null)\r\n        roasArray.push(null)\r\n      }\r\n    })\r\n\r\n    setAdAccount(state => {\r\n      state.dateArray = dateArray\r\n      state.leadSpendArray = leadSpendArray\r\n      state.leadArray = leadArray\r\n      state.preLaunchSpendArray = preLaunchSpendArray\r\n      state.roasSpendArray = roasSpendArray\r\n      state.roasArray = roasArray\r\n    })\r\n  }\r\n\r\n\r\n  const purchaseLineChartData = {\r\n    labels: [...adAccount.dateArray].reverse(),\r\n    datasets: [\r\n      {\r\n        label: 'ROAS',\r\n        fill: false,\r\n        borderColor: 'red',\r\n        pointBackgroundColor: 'red',\r\n        pointHoverBackgroundColor: 'red',\r\n        data: [...adAccount.roasArray].reverse(),\r\n      },\r\n    ],\r\n  }\r\n  const leadLineChartData = {\r\n    labels: [...adAccount.dateArray].reverse(),\r\n    datasets: [\r\n      {\r\n        label: 'CPL',\r\n        fill: false,\r\n        borderColor: '#666',\r\n        pointBackgroundColor: '#666',\r\n        pointHoverBackgroundColor: '#666',\r\n        data: [...adAccount.leadArray].reverse()\r\n      },\r\n    ],\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [adAccountId])\r\n\r\n  useEffect(() => {\r\n    generateChartData()\r\n  }, [adAccount.data])\r\n\r\n  return (\r\n    <div className='container my-3'>\r\n      {loading ? (\r\n        <div className='text-center my-5'>\r\n          <div className='spinner-border text-primary' role='status'>\r\n            <span className='sr-only'>Loading...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div\r\n            className='btn btn-primary'\r\n            onClick={() => navigate('/facebook-ad-account-dashboard/')}\r\n          >\r\n            Home\r\n          </div>\r\n          <h1 className='text-center my-3'>{adAccount.name}</h1>\r\n\r\n          {/* 圖表 */}\r\n          <div className='my-2' style={{ height: '200px' }}>\r\n            <Line data={purchaseLineChartData} options={chartConfigOptions} />\r\n          </div>\r\n          <div className='my-2' style={{ height: '200px' }}>\r\n            <Line data={leadLineChartData} options={chartConfigOptions} />\r\n          </div>\r\n\r\n          {/* 走速表 */}\r\n          <table className='table'>\r\n            <thead>\r\n              <tr>\r\n                <th scope='col'>Date</th>\r\n                <th scope='col'>前測花費</th>\r\n                <th scope='col'>CPL</th>\r\n                <th scope='col'>預熱花費</th>\r\n                <th scope='col'>上線花費</th>\r\n                <th scope='col'>ROAS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {adAccount.dateArray.map(\r\n                (\r\n                  date,\r\n                  index\r\n                ) => {\r\n                 \r\n\r\n                  return (\r\n                    <tr key={`daily-adAccount-data-${index}`}>\r\n                      <th>{date}</th>\r\n                      <td>{adAccount.leadSpendArray[index]}</td>\r\n                      <td>{adAccount.leadArray[index]}</td>\r\n                      <td>{adAccount.preLaunchSpendArray[index]}</td>\r\n                      <td>{adAccount.roasSpendArray[index]}</td>\r\n                      <td>{adAccount.roasArray[index]}</td>\r\n                    </tr>\r\n                  )\r\n                }\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          {/* Paging */}\r\n          {/* <div className='row'>\r\n            <div className='col-6 text-left'>\r\n              {paging.hasPrevious ? (\r\n                <div\r\n                  className='btn btn-primary'\r\n                  onClick={() => fetchData('before', paging.cursors.before)}\r\n                >\r\n                  Previous\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <div className='col-6 text-right'>\r\n              {paging.hasNext ? (\r\n                <div\r\n                  className='btn btn-primary'\r\n                  onClick={() => fetchData('after', paging.cursors.after)}\r\n                >\r\n                  Next\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          </div> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  function fetchData(cursorKey = '', cursorValue = '') {\r\n    setLoading(true)\r\n    fetch(\r\n      // `http://localhost:8000/ad-account/${adAccountId}?${cursorKey}=${cursorValue}`\r\n      `https://fb-ads-api.herokuapp.com/ad-account/${adAccountId}?${cursorKey}=${cursorValue}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        // console.log(res)\r\n        setAdAccount((state) => {\r\n          state.data = formatDataMart(res.data)\r\n          state.name = res.data[0].account_name\r\n        })\r\n        setPaging(res.paging)\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  function formatDataMart(rawData) {\r\n    const dataMart = {}\r\n    rawData.map((data) => {\r\n      const date = data.date_start\r\n      const campaignType = getCampaignType(data)\r\n\r\n      dataMart[date]\r\n        ? dataMart[date][campaignType]\r\n          ? dataMart[date][campaignType].push(data)\r\n          : (dataMart[date][campaignType] = [data])\r\n        : (dataMart[date] = { [campaignType]: [data] })\r\n    })\r\n    // console.log('dataMart:', dataMart)\r\n    return dataMart\r\n  }\r\n\r\n  function getCampaignType(data) {\r\n    return data.campaign_name.includes('預熱')\r\n      ? '預熱'\r\n      : data.campaign_name.includes('前測')\r\n      ? '前測'\r\n      : data.campaign_name.includes('嘖嘖')\r\n      ? '嘖嘖'\r\n      : 'none'\r\n  }\r\n}\r\n\r\nexport default AdAccount\r\n","import React from 'react'\nimport { Router } from '@reach/router'\n\n// utils\n\n// assets\n\n// actions\n\n// components\nimport Home from './Home'\nimport AdAccount from './AdAccount'\n\n// self-defined-components\nconst App = () => {\n  return (\n    <Router basepath=\"/facebook-ad-account-dashboard\" primary={false}>\n      <Home path='/' />\n      <AdAccount path='/ad-account/:adAccountId' />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './pages/App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}